# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
# feat(workflows): Add node.js CI pipeline

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
# https://docs.github.com/en/actions/security-guides/using-secrets-in-github-actions
# https://docs.github.com/en/actions/learn-github-actions/variables

name: Proxy CI

on:
  push:
    branches:
      - main
    paths:
      - 'udagram-reverseproxy/*'
      - '.github/workflows/reverse-proxy-ci.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'udagram-reverseproxy/*'
      - '.github/workflows/reverse-proxy-ci.yml'

jobs:
  build:

    runs-on: ubuntu-latest
    environment: test

    steps:
    - uses: actions/checkout@v3
    # - name: Use Node.js
    #   uses: actions/setup-node@v3
    #   with:
    #     node-version: '20.x'
    # - run: npm ci
    # - run: echo ${{ vars.DOCKER_REGISTRY }}
    # - run: echo ${{ vars.DOCKER_USER }}

    - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
      uses: docker/login-action@v3.0.0
      with:
        # Server address of Docker registry. If not set then will default to Docker Hub
        registry: ${{ vars.DOCKER_REGISTRY }}
        username: ${{ vars.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - run: ls -la

    - name: Build the Docker image
      run: docker build ./udagram-reverseproxy -t ${{ vars.DOCKER_USER }}/reverseproxy:v1

    - name: Push the Docker image
      run: docker push ${{ vars.DOCKER_USER }}/reverseproxy:v1